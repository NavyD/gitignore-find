name: Setup Rust Toolchain Cache
description: test

inputs:
  key:
    description: "cache rustup"
    required: false
  toolchain:
    description: "rustup toolchain"
    default: stable
    required: false
  components:
    description: "rustup components"
    required: false
    # 本地预安装所有需要的
    default: rustfmt clippy llvm-tools-preview

runs:
  using: composite
  steps:
    - name: Pre setup rustup/cargo config
      shell: bash
      id: presetup-config
      if: ${{ env.ACT }}
      run: |
        # 添加`~/.cargo/bin`到PATH中
        echo "${CARGO_HOME:-$HOME/.cargo}/bin" >> $GITHUB_PATH

        mkdir -p ~/.cargo
        # cargo crates.io源代理
        cat >>~/.cargo/config.toml <<EOF
        [source.crates-io]
        replace-with = 'rsproxy-sparse'
        [source.rsproxy]
        registry = "https://rsproxy.cn/crates.io-index"
        [source.rsproxy-sparse]
        registry = "sparse+https://rsproxy.cn/index/"
        [registries.rsproxy]
        index = "https://rsproxy.cn/crates.io-index"
        [net]
        git-fetch-with-cli = true
        EOF
    - name: Cache rustup
      id: cache-rustup
      if: ${{ env.ACT }}
      uses: actions/cache@v4
      with:
        path: |
          ~/.rustup
          ~/.cargo/bin
          ~/.cargo/env
        key: act-${{ runner.os }}-rustup-profile_minimal-${{ inputs.toolchain }}-${{ inputs.components }}-${{ hashFiles('.cargo/config.toml', '~/.cargo/config.toml', 'rust-toolchain.toml', 'rust-toolchain') }}
        restore-keys: |
          act-${{ runner.os }}-rustup-
    - name: Install rust toolchain
      if: ${{ env.ACT && steps.cache-rustup.outputs.cache-hit != 'true' }}
      shell: bash
      env:
        # 启用rustup安装代理
        RUSTUP_DIST_SERVER: https://rsproxy.cn
        RUSTUP_UPDATE_ROOT: https://rsproxy.cn/rustup
        rustup_init_url: https://rsproxy.cn/rustup-init.sh
        components: ${{inputs.components}}
        toolchain: ${{inputs.toolchain}}
      run: |
        set -x
        components="$(sed -e 's/\s\+/,/g' <<<"$components")"
        curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL "${rustup_init_url:-https://sh.rustup.rs}" |
          sh -s -- --default-toolchain $toolchain -c "$components" --profile minimal -y
